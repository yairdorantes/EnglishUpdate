[{"/home/yair/Desktop/Programming/what i delete form project/src/index.js":"1","/home/yair/Desktop/Programming/what i delete form project/src/App.js":"2","/home/yair/Desktop/Programming/what i delete form project/src/reportWebVitals.js":"3","/home/yair/Desktop/Programming/what i delete form project/src/router/Routers.js":"4","/home/yair/Desktop/Programming/what i delete form project/src/router/PrivateRoute.js":"5","/home/yair/Desktop/Programming/what i delete form project/src/components/PostPage.js":"6","/home/yair/Desktop/Programming/what i delete form project/src/components/Session.js":"7","/home/yair/Desktop/Programming/what i delete form project/src/components/LoginPage.js":"8","/home/yair/Desktop/Programming/what i delete form project/src/components/MenuV2.js":"9","/home/yair/Desktop/Programming/what i delete form project/src/components/Posts.js":"10","/home/yair/Desktop/Programming/what i delete form project/src/components/SubMenuCard.js":"11","/home/yair/Desktop/Programming/what i delete form project/src/components/NewLogin.js":"12","/home/yair/Desktop/Programming/what i delete form project/src/components/NewSignUp.js":"13","/home/yair/Desktop/Programming/what i delete form project/src/components/Cards.js":"14","/home/yair/Desktop/Programming/what i delete form project/src/components/Phrases.js":"15","/home/yair/Desktop/Programming/what i delete form project/src/components/DeleteCards.js":"16","/home/yair/Desktop/Programming/what i delete form project/src/context/AuthContext.js":"17","/home/yair/Desktop/Programming/what i delete form project/src/components/Loader.js":"18","/home/yair/Desktop/Programming/what i delete form project/src/components/Domain.js":"19","/home/yair/Desktop/Programming/what i delete form project/src/components/Heart.js":"20","/home/yair/Desktop/Programming/what i delete form project/src/components/MenuBar.js":"21","/home/yair/Desktop/Programming/what i delete form project/src/components/LeaderBoard.js":"22","/home/yair/Desktop/Programming/what i delete form project/src/components/PayPal.js":"23","/home/yair/Desktop/Programming/what i delete form project/src/components/FormCard.js":"24","/home/yair/Desktop/Programming/what i delete form project/src/helpers/helpHttp.js":"25","/home/yair/Desktop/Programming/what i delete form project/src/components/AboutUser.js":"26","/home/yair/Desktop/Programming/what i delete form project/src/components/NewLeaderBoard.js":"27"},{"size":847,"mtime":1673368897734,"results":"28","hashOfConfig":"29"},{"size":135,"mtime":1673326333720,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1661975996000,"results":"31","hashOfConfig":"29"},{"size":1923,"mtime":1675217262381,"results":"32","hashOfConfig":"29"},{"size":300,"mtime":1672689137111,"results":"33","hashOfConfig":"29"},{"size":1814,"mtime":1675204668201,"results":"34","hashOfConfig":"29"},{"size":2319,"mtime":1675205598092,"results":"35","hashOfConfig":"29"},{"size":3460,"mtime":1669943581275,"results":"36","hashOfConfig":"29"},{"size":1901,"mtime":1673380208808,"results":"37","hashOfConfig":"29"},{"size":3292,"mtime":1673379805796,"results":"38","hashOfConfig":"29"},{"size":6196,"mtime":1675226461345,"results":"39","hashOfConfig":"29"},{"size":5947,"mtime":1675210757585,"results":"40","hashOfConfig":"29"},{"size":6633,"mtime":1675211679248,"results":"41","hashOfConfig":"29"},{"size":14738,"mtime":1673369044487,"results":"42","hashOfConfig":"29"},{"size":5386,"mtime":1673218884573,"results":"43","hashOfConfig":"29"},{"size":4848,"mtime":1673370035059,"results":"44","hashOfConfig":"29"},{"size":3658,"mtime":1675212641141,"results":"45","hashOfConfig":"29"},{"size":382,"mtime":1673149476727,"results":"46","hashOfConfig":"29"},{"size":98,"mtime":1672796996980,"results":"47","hashOfConfig":"29"},{"size":738,"mtime":1673380087953,"results":"48","hashOfConfig":"29"},{"size":2426,"mtime":1675212616536,"results":"49","hashOfConfig":"29"},{"size":4878,"mtime":1675218084564,"results":"50","hashOfConfig":"29"},{"size":2327,"mtime":1669057988716,"results":"51","hashOfConfig":"29"},{"size":8894,"mtime":1673381797850,"results":"52","hashOfConfig":"29"},{"size":1601,"mtime":1661975996000,"results":"53","hashOfConfig":"29"},{"size":4114,"mtime":1669057683531,"results":"54","hashOfConfig":"29"},{"size":2789,"mtime":1675220925412,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z44fwx",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":4,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},"/home/yair/Desktop/Programming/what i delete form project/src/index.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/App.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/reportWebVitals.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/router/Routers.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/router/PrivateRoute.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/PostPage.js",["149","150","151"],[],"import \"./styles/singlePost.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport AuthContext from \"../context/AuthContext\";\n// import MenuBar from \"./MenuBar\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport { isMobile } from \"react-device-detect\";\nimport mySite from \"./Domain\";\nimport MenuBar from \"./MenuBar\";\n\nconst parametros = {\n  method: \"GET\",\n  headers: {\n    accept: \"application/json\",\n  },\n};\n\nconst PostPage = () => {\n  let { user } = useContext(AuthContext);\n  const [post, setPost] = useState();\n  const params = useParams();\n\n  const fetchAPi = async () => {\n    let url = `${mySite}post/${params.id}`;\n    const response = await fetch(url, parametros);\n    const responseJSON = await response.json();\n    setPost(responseJSON.post[0]);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  return (\n    <>\n      <div className=\"container-post-content pb-[100px]\">\n        {!post ? (\n          <Loader></Loader>\n        ) : (\n          <div className=\"post-content\">\n            <h1 className=\"title-post text-4xl font-bold\">{post.title}</h1>\n            <div className=\"box-image-post\">\n              <img className=\"image-single-post\" src={post.image_src} />\n            </div>\n\n            <div\n              className=\"box-text-post\"\n              style={{\n                fontSize: isMobile ? \"18px\" : \"20px\",\n                padding: isMobile && \"20px\",\n              }}\n            >\n              <ReactMarkdown\n                remarkPlugins={[remarkGfm]}\n                children={post.content}\n              ></ReactMarkdown>\n            </div>\n          </div>\n        )}\n      </div>\n      <MenuBar></MenuBar>\n    </>\n  );\n};\n\nexport default PostPage;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/Session.js",["152","153"],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/LoginPage.js",["154","155","156"],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/MenuV2.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/Posts.js",["157","158"],[],"import \"./styles/postCards.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport AuthContext from \"../context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport MenuBar from \"./MenuBar\";\n\n// import remarkGfm from \"remark-gfm\";\nimport { isMobile } from \"react-device-detect\";\nimport mySite from \"./Domain\";\nimport Heart from \"./Heart\";\nimport axios from \"axios\";\n\nlet url = `${mySite}postset/`;\nlet like = `${mySite}posts/`;\n\nconst Posts = () => {\n  let { user } = useContext(AuthContext);\n  const [likes, setLikes] = useState([]);\n\n  const [posts, setPosts] = useState();\n\n  const fetchAPi = async () => {\n    axios\n      .get(url)\n      .then((res) => {\n        setPosts(res.data);\n      })\n      .catch((err) => {\n        console.log(err, \"here\");\n      });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  const giveLike = (post) => {\n    let updatedPost = { ...post };\n    updatedPost.likes_count += 1;\n    setPosts((prevPosts) =>\n      prevPosts.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n    );\n    let options = {\n      body: { is_like: true, id: post.id, user_id: user.user_id },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp().post(like, options);\n  };\n  const giveDislike = (post) => {\n    let updatedPost = { ...post };\n    updatedPost.likes_count -= 1;\n    setPosts((prevPosts) =>\n      prevPosts.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n    );\n    let options = {\n      body: { is_like: false, id: post.id, user_id: user.user_id },\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp().post(like, options);\n  };\n\n  return (\n    <div\n      className=\"main-container-post\"\n      style={{ height: isMobile ? \"100%\" : \"100vh\" }}\n    >\n      <div className=\"container-posts\">\n        {!posts ? (\n          <Loader></Loader>\n        ) : (\n          posts.map((post) => {\n            return (\n              <div key={post.id} className=\"card-post\">\n                <Link to={`/postpage/${post.id}`} className=\"link-post\">\n                  <div\n                    style={{ backgroundImage: \"url(\" + post.image_src + \")\" }}\n                    className=\"box-img-post-card\"\n                  ></div>\n                  <div\n                    style={{ backgroundColor: `${post.categoria.color}` }}\n                    className=\"section-post\"\n                  >\n                    <span>{post.categoria.name}</span>\n                  </div>\n                  <div className=\"container-card-text\">\n                    <h3 className=\"title-post-card\">{post.title}</h3>\n                  </div>\n                </Link>\n\n                <div className=\"\">\n                  <Heart\n                    txt={post.likes_count}\n                    state={\n                      post.likes.indexOf(user.user_id) !== -1 ? true : false\n                    }\n                    actions={{\n                      like: () => giveLike(post),\n                      dislike: () => giveDislike(post),\n                    }}\n                  />\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      <MenuBar></MenuBar>\n    </div>\n  );\n};\n\nexport default Posts;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/SubMenuCard.js",["159"],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/NewLogin.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/NewSignUp.js",["160"],[],"import React, { useContext, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport eyes from \"../media/eye2.png\";\nimport closeye from \"../media/eyeclose.png\";\nimport mySite from \"./Domain\";\nlet url = `${mySite}users/`;\n\nconst initialForm = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\nconst NewSignUp = () => {\n  let { loginUser } = useContext(AuthContext);\n\n  const [form, setForm] = useState(initialForm);\n\n  const navigate = useNavigate();\n\n  const [isVisiblePass, setIsVisiblePass] = useState(false);\n  const changeEye = () => {\n    setIsVisiblePass(!isVisiblePass);\n  };\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const createData = (data) => {\n    console.log(data.username);\n    let options = {\n      body: data,\n      headers: { \"content-type\": \"application/json\" },\n    };\n    helpHttp()\n      .post(url, options)\n      .then((res) => {\n        console.log(res);\n      });\n    // loginAfterSignUp(data);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!form.username || !form.email || !form.password) {\n      alert(\"Por favor llena todos los datos\");\n      return;\n    } else {\n      if (form.username.length > 14) {\n        alert(\"Elige un nombre menor a 14 caracteres\");\n        return;\n      }\n      // logoutUser();\n      navigate(\"/menu\");\n    }\n    setForm((form[\"password\"] = form[\"password\"]));\n    createData(form);\n    console.log(form[\"password\"]);\n\n    handleReset();\n  };\n  const handleReset = (e) => {\n    setForm(initialForm);\n  };\n  return (\n    <div className=\"\">\n      <section className=\"bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0\">\n          <az\n            href=\"#\"\n            className=\"flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white\"\n          >\n            <img\n              className=\"w-8 h-8 mr-2\"\n              src=\"https://flowbite.s3.amazonaws.com/blocks/marketing-ui/logo.svg\"\n              alt=\"logo\"\n            />\n            Flowbite\n          </az>\n          <div className=\"w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700\">\n            <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n              <h1 className=\"text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white\">\n                Crea una cuenta\n              </h1>\n              <form\n                className=\"space-y-4 md:space-y-6\"\n                action=\"#\"\n                onSubmit={loginUser}\n              >\n                <div>\n                  <label\n                    htmlFor=\"username\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Usuario\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"nombre de usuario\"\n                    required=\"\"\n                    value={form.username}\n                    onChange={handleChange}\n                  />\n                </div>\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    placeholder=\"nombre@ejemplo.com\"\n                    required=\"\"\n                    value={form.email}\n                    onChange={handleChange}\n                  />\n                </div>\n\n                <div className=\"relative\">\n                  <label\n                    htmlFor=\"password\"\n                    className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                  >\n                    Password\n                  </label>\n                  <input\n                    type={isVisiblePass ? \"text\" : \"password\"}\n                    name=\"password\"\n                    id=\"password\"\n                    value={form.password}\n                    placeholder=\"••••••••\"\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n                    required=\"\"\n                    onChange={handleChange}\n                  />\n                  <img\n                    className=\"w-7 absolute right-4 bottom-2 cursor-pointer\"\n                    onClick={changeEye}\n                    src={!isVisiblePass ? closeye : eyes}\n                    alt=\"\"\n                  />\n                </div>\n                <button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  className=\"w-full btn text-white bg-primary hover:bg-secondary focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center\"\n                >\n                  Registrar\n                </button>\n                <p className=\"text-sm font-light text-gray-500 dark:text-gray-400\">\n                  ¿Ya tienes una cuenta?{\" \"}\n                  <Link\n                    className=\"font-medium text-primary-600 hover:underline dark:text-primary-500\"\n                    to={\"/login\"}\n                  >\n                    Ingresar\n                  </Link>\n                </p>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default NewSignUp;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/Cards.js",["161","162"],[],"import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport \"./styles/cardStyles.css\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/effect-cards\";\nimport \"./styles/stylesCards.css\";\nimport { Pagination, EffectCards, Mousewheel, Keyboard } from \"swiper\";\nimport wordSound from \"../media/cards/audio.png\";\nimport iconAdd from \"../media/add.png\";\nimport Loader from \"./Loader\";\nimport MenuBar from \"./MenuBar\";\nimport { Link, NavLink, useParams } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport FormCard from \"./FormCard\";\nimport PayPal from \"./PayPal\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport Modal from \"react-modal\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport next from \"../media/next3.png\";\nimport mySite from \"./Domain\";\nimport { isMobile } from \"react-device-detect\";\nimport AWS from \"aws-sdk\";\nimport axios from \"axios\";\nimport Phrases from \"./Phrases\";\n// import CardTuto from \"./CardTuto\";\n\nlet url = \"\";\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst Cards = () => {\n  let { user } = useContext(AuthContext);\n  // console.log(user.user_id);\n\n  let urlIncreaseScore = `${mySite}increase/${user.user_id}`;\n  const audioRef = useRef();\n\n  const paramsUrl = useParams();\n  const [audio, setAudio] = useState();\n\n  const [isActive, setIsActive] = useState(true);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isPremium, setIsPremium] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [answerSelected, setAnswerSelected] = useState();\n  const [cardPicked, setCardPicked] = useState();\n  const [modalQuestion, setModalQuestion] = useState(false);\n  const [result, setResult] = useState();\n  const [answers, setAnswers] = useState([]);\n  const [isSent, setIsSent] = useState(false);\n  const [mode, setMode] = useState(true);\n  const [checked, setChecked] = useState();\n  const [loader, setLoader] = useState(false);\n  const polly = new AWS.Polly({\n    region: \"us-east-1\",\n    accessKeyId: \"AKIAU2DSU7LYS7FGQID2\",\n    secretAccessKey: \"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\",\n  });\n\n  const customStyles = {\n    content: {\n      // color: \"black\",\n      width: isMobile ? \"84vw\" : \"320px\",\n      height: \"440px\",\n      backgroundColor: mode ? \"white\" : \"black\",\n      top: isMobile ? \"50%\" : \"40%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      border: \"solid 1px #270969\",\n      // backgroundColor: \"#00000000\",\n      outline: \"none\",\n      transition: \"1s ease-in-out\",\n      borderRadius: \"10px\",\n      overflow: \"hidden\",\n      fontFamily: \"Mulish, sans-serif\",\n\n      // padding: \"0\",\n    },\n    overlay: { zIndex: 1000, backgroundColor: \"rgba(0, 0, 0, 0.9)\" },\n  };\n\n  const fetchAPi = async () => {\n    setLoader(true);\n    paramsUrl.section === \"mis-cartas\"\n      ? (url = `${mySite}usercards/${user.user_id}`)\n      : (url = `${mySite}cards/${paramsUrl.section}`);\n    axios.get(url).then((res) => {\n      setCards(res.data);\n      setLoader(false);\n    });\n  };\n\n  const getUserData = () => {\n    helpHttp()\n      .get(`${mySite}users/${user.user_id}`)\n      .then((res) => {\n        // console.log(res.user.premium);\n        setIsPremium(res.user.premium);\n      });\n  };\n\n  useEffect(() => {\n    fetchAPi();\n    getUserData();\n  }, []);\n\n  const handleDisplay = (e) => {\n    isActive ? setIsActive(false) : setIsActive(true);\n  };\n  const hideQuestion = () => {\n    setModalQuestion(false);\n    setResult();\n    setIsSent(false);\n  };\n\n  const openModal = (e) => {\n    setModalIsOpen(!modalIsOpen);\n  };\n\n  function differentRandom() {\n    var randoms = [];\n    while (randoms.length < 3) {\n      var r = Math.floor(Math.random() * cards.cards.length - 1) + 1;\n      if (randoms.indexOf(r) === -1) randoms.push(r);\n    }\n    return randoms;\n  }\n\n  const generateQuestion = () => {\n    setChecked(-1);\n\n    const lista = [];\n    const cartas = cards.cards;\n    if (cards.cards) {\n      if (cartas.length < 4) {\n        hideQuestion();\n        alert(\"Necesitas agregar almenos 4 cartas para generar un Quiz\");\n      } else {\n        const randomsGenerated = differentRandom();\n        const cardChoosen = cartas[randomsGenerated[0]];\n        lista.push(cardChoosen);\n        setCardPicked(cardChoosen);\n        const answerOne = cartas[randomsGenerated[1]];\n        lista.push(answerOne);\n        const answerTwo = cartas[randomsGenerated[2]];\n        lista.push(answerTwo);\n        setAnswers(lista.sort(() => Math.random() - 0.5));\n      }\n    } else {\n      alert(\"Agrega más cartas 4 cartas para generar un Quiz\");\n    }\n  };\n\n  const handleChangeRadio = (e) => {\n    setAnswerSelected(e.target.value);\n    console.log(e.target.id);\n    setChecked(e.target.id);\n  };\n  const handleAnswer = () => {\n    setIsSent(true);\n    // setChecked(-1);\n    if (answerSelected === cardPicked.cardMeaning) {\n      console.log(\"correct\");\n      setResult(true);\n      helpHttp().post(urlIncreaseScore);\n    } else {\n      console.log(\"incorrect\");\n      setResult(false);\n    }\n  };\n\n  const openModalQuestion = (e) => {\n    // e.preventDefault();\n    if (!cards.cards) {\n      alert(\"Agrega más cartas UwU\");\n      return;\n    } else {\n      generateQuestion();\n      modalQuestion ? setModalQuestion(false) : setModalQuestion(true);\n    }\n  };\n  const nextQuestion = () => {\n    setAnswerSelected();\n    generateQuestion();\n    setResult();\n    setIsSent(false);\n  };\n\n  const toggleMode = () => {\n    setMode(!mode);\n  };\n\n  const handleAudio = (word) => {\n    const params = {\n      OutputFormat: \"mp3\", // or 'ogg_vorbis'\n      Text: word,\n      VoiceId: \"Salli\",\n    };\n    polly.synthesizeSpeech(params, (err, data) => {\n      if (err) {\n        console.log(err);\n      } else {\n        const audioBlob = new Blob([data.AudioStream], { type: \"audio/mpeg\" });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudio(audioUrl);\n\n        // you can then use the audioUrl to play the audio file in your app\n      }\n    });\n  };\n  useEffect(() => {\n    audioRef.current.play();\n  }, [audio]);\n\n  return (\n    <>\n      {/* <AboutUser wasUp={result}></AboutUser> */}\n\n      <div className=\"all-cards\">\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"del-cards\">\n            <NavLink to=\"/cards/delete\">\n              <button className=\"btn btn-accent btn-sm\">\n                <strong>Eliminar ó Editar</strong>\n              </button>\n            </NavLink>\n          </div>\n        )}\n\n        <Swiper\n          keyboard={true}\n          mousewheel={true}\n          className=\"mySwiper\"\n          effect={\"cards\"}\n          modules={[EffectCards, Mousewheel, Pagination, Keyboard]}\n        >\n          {/* <CardTuto></CardTuto> */}\n          {!cards ? (\n            loader && <Loader />\n          ) : !cards.cards ? (\n            <div className=\"nada-por-aqui\">\n              <strong>Nada por aqui... Agrega tus cartas 💾</strong>\n              {loader && <Loader />}\n            </div>\n          ) : (\n            cards.cards.map((card, key) => {\n              // console.log(cards);\n              return (\n                <SwiperSlide\n                  style={{\n                    borderColor: \"white\",\n                    backgroundImage:\n                      \"url(\" +\n                      (card.imageURL === \"\"\n                        ? urlImageCard + card.cardImage\n                        : card.imageURL) +\n                      \")\",\n                  }}\n                  className=\"swiper-slide-card\"\n                  key={card.id}\n                >\n                  <div className=\"container-card\">\n                    <div className=\"card\">\n                      <div className=\"contenido-card\">\n                        <h3 onClick={handleDisplay} className=\"card-text\">\n                          {isActive ? card.cardTitle : card.cardMeaning}\n                        </h3>\n                      </div>\n                    </div>\n                    <button\n                      className=\"btn-sound-card\"\n                      onClick={() => {\n                        handleAudio(card.cardTitle);\n                      }}\n                    >\n                      <img className=\"word-sound\" src={wordSound} alt=\"\" />\n                    </button>\n                  </div>\n                </SwiperSlide>\n              );\n            })\n          )}\n          <audio src={audio} ref={audioRef}></audio>\n        </Swiper>\n        {paramsUrl.section === \"mis-cartas\" && (\n          <div className=\"container-icon-add\">\n            {cards.cards && cards.cards.length >= 10 && !isPremium ? (\n              <>\n                <div className=\"container-updatein-card\">\n                  <div className=\"alert-no-more-cards\">\n                    <strong>\n                      Para seguir agregando cartas, actualízate a premium\n                    </strong>\n                  </div>\n                  <div>\n                    <PayPal />\n                  </div>\n                </div>\n              </>\n            ) : (\n              <img\n                onClick={openModal}\n                className=\"icon-add mx-auto\"\n                src={iconAdd}\n                alt=\"\"\n              />\n            )}\n          </div>\n        )}\n        {cards.cards && cards.cards.length > 3 && (\n          <Modal\n            // className=\"modal-card-question\"\n            ariaHideApp={false}\n            style={customStyles}\n            isOpen={modalQuestion}\n            contentLabel=\"Minimal Modal Example\"\n            // className=\"bg-red-400\"\n            // className=\"modal-quiz\"\n          >\n            <OutsideClickHandler\n              onOutsideClick={() => {\n                hideQuestion();\n              }}\n            >\n              <label className=\"switch\">\n                <input type=\"checkbox\" onClick={toggleMode} />\n                <span className=\"slider\"></span>\n              </label>\n              {cardPicked && (\n                <>\n                  <div\n                    style={{ color: mode ? \"black\" : \"white\" }}\n                    className=\"container-question-card\"\n                  >\n                    <div className=\"question-card\">\n                      Elige el significado de\n                      <strong> {cardPicked.cardTitle}</strong>\n                    </div>\n                    <div className=\"parent-answers\">\n                      {answers &&\n                        answers.map((answer, key) => {\n                          return (\n                            <div key={answer.id} className=\"box-answers\">\n                              <label\n                                className={\n                                  cardPicked.cardMeaning ===\n                                    answer.cardMeaning &&\n                                  isSent &&\n                                  !result\n                                    ? \"red-label showAnswer\"\n                                    : \"rad-label\"\n                                }\n                              >\n                                <input\n                                  id={key}\n                                  type=\"radio\"\n                                  className=\"rad-input\"\n                                  name=\"rad\"\n                                  onChange={handleChangeRadio}\n                                  value={answer.cardMeaning}\n                                  checked={checked == key && true}\n                                />\n                                <div className=\"rad-design\"></div>\n                                <div className=\"rad-text\">\n                                  {answer.cardMeaning}\n                                </div>\n                              </label>\n                            </div>\n                          );\n                        })}\n                    </div>\n\n                    <div className=\"parent-btn\">\n                      <button\n                        className={isSent ? \"hide\" : \"btn-send-answer \"}\n                        onClick={handleAnswer}\n                      >\n                        Enviar\n                      </button>\n                    </div>\n\n                    <div\n                      className=\"next-quest\"\n                      style={{\n                        bottom: isSent ? \"0\" : \"-83px\",\n                      }}\n                      onClick={nextQuestion}\n                    >\n                      <img\n                        onClick={nextQuestion}\n                        className=\"next-icon\"\n                        src={next}\n                        alt=\"\"\n                      />\n                      <div className=\"container-result-message\">\n                        <div\n                          className={\n                            isSent\n                              ? result\n                                ? \"message-question answer-right\"\n                                : \"message-question answer-wrong \"\n                              : \"hide\"\n                          }\n                        >\n                          {result ? \"Correcto\" : \"Incorrecto\"}\n                        </div>\n                      </div>\n                      {/* <div className=\"bg-white\">Incorrecto</div> */}\n                    </div>\n                    <div\n                      className={\n                        result\n                          ? \"upScore-indicator upScoreAnimation\"\n                          : \"upScore-indicator\"\n                      }\n                    >\n                      <strong>+1XP</strong>\n                    </div>\n                  </div>\n                </>\n              )}\n            </OutsideClickHandler>\n          </Modal>\n        )}\n        {isPremium && (\n          <div className=\"cont-btn-review flex justify-center flex-col gap-5 items-center\">\n            <button\n              className=\"css-button-shadow-border-sliding--sky \"\n              onClick={openModalQuestion}\n            >\n              Quiz\n            </button>\n            <Link to=\"/phrases\" state={{ crts: cards.cards }}>\n              <button\n                className=\"btn btn-secondary\"\n                onClick={() => {\n                  console.log(cards.cards);\n                  <Phrases cartas={cards.cards}></Phrases>;\n                }}\n              >\n                HardCore quiz\n              </button>\n            </Link>\n          </div>\n        )}\n      </div>\n      <FormCard\n        fetchApi={fetchAPi}\n        modalIsOpen={modalIsOpen}\n        openModal={openModal}\n      />\n\n      <MenuBar wasUp={result} />\n    </>\n  );\n};\n\nexport default Cards;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/Phrases.js",["163","164","165","166","167","168","169"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport mySite from \"./Domain\";\nimport Loader from \"./Loader\";\nconst Phrases = ({ myCards = true, section, cartas }) => {\n  const location = useLocation();\n  const { crts } = location.state;\n  console.log(crts);\n\n  const [cards, setCards] = useState(crts);\n  const [phrase, setPhrase] = useState(\"hi how is your day\");\n\n  const [test, setTest] = useState(\"\");\n  const [wordSelected, setWordSelected] = useState();\n  const [answer, setAnswer] = useState(\"\");\n  const [isCorrect, setIsCorrect] = useState();\n  const [isSent, setIsSent] = useState(false);\n  const [loader, setLoader] = useState(false);\n  const [collapse, setCollapse] = useState(false);\n  // let { user } = useContext(AuthContext);\n  // let url;\n  // myCards === true\n  //   ? (url = `${mySite}usercards/${user.user_id}`)\n  //   : (url = `${mySite}cards/${section}`);\n\n  const generateWord = () => {\n    setAnswer(\"\");\n\n    setTest();\n    setLoader(true);\n    const word = cards[Math.floor(Math.random() * cards.length)];\n    setWordSelected(word.cardTitle);\n    console.log(word.cardTitle);\n\n    const urlPhrases = `${mySite}phrases/${word.cardTitle}`;\n    // console.log(str);\n    console.log(urlPhrases, \"ssiisi\");\n    axios\n      .get(urlPhrases)\n      .then((res) => {\n        console.log(res.data);\n\n        let modifyPhrase = res.data.phrase.replace(/'/g, \"\").replace(/\"/g, \"\");\n        setTest(modifyPhrase.replace(new RegExp(word.cardTitle, \"i\"), \"___\"));\n        setLoader(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleAnswer = () => {\n    setIsSent(true);\n    if (answer != \"\" && wordSelected.toLowerCase() === answer.toLowerCase()) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n  const nextQuestion = () => {\n    generateWord();\n    setIsSent(false);\n  };\n  const handleChange = (e) => {\n    const wordAnswer = e.target.value;\n    setAnswer(wordAnswer);\n  };\n  const handleCollapse = (e) => {\n    setCollapse(!collapse);\n  };\n  useEffect(() => {\n    generateWord();\n  }, []);\n\n  return (\n    <div className=\"h-[100vh] bg-base-200\">\n      <h3 className=\"text-3xl font-bold dark:text-white text-center mb-10\">\n        Completa la frase con la palabra faltante\n      </h3>\n      <div className=\"card w-96 mx-auto bg-primary-content gap-5 p-7\">\n        {loader && <Loader className=\"mx-auto text-center\" />}\n        <div className=\"text-2xl font-bold text-white\">{test}</div>\n\n        <input\n          type=\"text\"\n          placeholder=\"Escribe la palabra faltante\"\n          className=\"input input-bordered text-center max-w-xs mt-10\"\n          onChange={handleChange}\n          autoFocus\n          value={answer}\n        />\n\n        {!isSent ? (\n          <button className=\"btn btn-success\" onClick={handleAnswer}>\n            send\n          </button>\n        ) : (\n          <div\n            className={`alert shadow-lg flex flex-wrap transition duration-300 ${\n              isCorrect ? \"alert-success\" : \"alert-error\"\n            }`}\n          >\n            <div className=\"mx-auto\">\n              {isCorrect ? (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"stroke-current flex-shrink-0 h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              ) : (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className=\"stroke-current flex-shrink-0 h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth=\"2\"\n                    d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                  />\n                </svg>\n              )}\n\n              <span>{isCorrect ? \"Correcto\" : \"Palabra correcta: \"}</span>\n            </div>\n            {!isCorrect && (\n              <div className=\"w-full flex justify-center text-centerfont font-bold text-xl\">\n                {wordSelected}\n              </div>\n            )}\n            <button className=\"btn w-full mx-auto\" onClick={nextQuestion}>\n              siguiente question\n            </button>\n          </div>\n        )}\n      </div>\n      <div\n        onClick={handleCollapse}\n        className={`collapse ${\n          collapse ? \"collapse-open\" : \"collapse-close\"\n        } collapse-arrow border border-base-300 bg-base-100 rounded-box cursor-pointer sm:w-1/2 mx-auto mt-10`}\n      >\n        <div className=\"collapse-title text-xl font-medium\">\n          Posibles respuestas\n        </div>\n        <div className=\"collapse-content\">\n          {cards.map((card, key) => {\n            return <li key={key}>{card.cardTitle}</li>;\n          })}\n        </div>\n      </div>\n      {/* <Loader className=\"\" /> */}\n    </div>\n  );\n};\n\nexport default Phrases;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/DeleteCards.js",["170","171"],[],"import { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport Loader from \"./Loader\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport pencil from \"../media/lapiz.png\";\nimport delIcon from \"../media/delete.png\";\nimport Modal from \"react-modal\";\nimport MenuBar from \"./MenuBar\";\nimport \"./styles/modifyCards.css\";\nimport FormCard from \"./FormCard\";\nimport mySite from \"./Domain\";\nconst customStyles = {\n  content: {\n    // color: \"white\",\n\n    width: \"350px\",\n    height: \"350px\",\n    backgroundColor: \"#00000000\",\n\n    outline: \"none\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"#171515ce\" },\n};\nconst urlImageCard = \"https://res.cloudinary.com/tolumaster/image/upload/v1/\";\n\nconst DeleteCards = () => {\n  let { user } = useContext(AuthContext);\n\n  const [cards, setCards] = useState();\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [cardId, setCardId] = useState();\n  const [actualCardTitle, setActualCardTitle] = useState(\"\");\n  const [cardToEdit, setCardToEdit] = useState();\n  const [editOrDelete, setEditOrDelete] = useState();\n  //   const [actualCardImg, setActualCardImg] = useState(\"\");\n  const fetchAPi = async () => {\n    let url = `${mySite}usercards/${user.user_id}`;\n\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setCards(responseJSON);\n    console.log(responseJSON);\n  };\n  const deleteCardF = () => {\n    let urlDel = `${mySite}delcard/${cardId}`;\n\n    helpHttp()\n      .del(urlDel)\n      .then((res) => {\n        console.log(res);\n        setModalIsOpen(false);\n        fetchAPi();\n      });\n  };\n  const openModal = () => {\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n  const getCurrentData = (title, id) => {\n    setEditOrDelete(\"del\");\n    setActualCardTitle(title);\n    setCardId(id);\n    // setActualCardImg(img);\n  };\n  const editCard = (editCard) => {\n    setEditOrDelete(\"put\");\n    setCardToEdit(editCard);\n    console.log(editCard);\n  };\n\n  useEffect(() => {\n    fetchAPi();\n  }, []);\n\n  return (\n    <div className=\"h-[100vh] bg-primary-content\">\n      <div className=\"container-cards-delete\">\n        {!cards ? (\n          <Loader></Loader>\n        ) : !cards.cards ? (\n          <div>Nada para borrar</div>\n        ) : (\n          cards.cards.map((card) => {\n            return (\n              <div key={card.id} className=\"container-card-delete\">\n                <h3 style={{ textAlign: \"center\", margin: \"5px\" }}>\n                  {card.cardTitle}\n                </h3>\n                <img\n                  className=\"delete-img-card\"\n                  src={\n                    card.cardImage === \"\"\n                      ? card.imageURL\n                      : urlImageCard + card.cardImage\n                  }\n                  alt=\"\"\n                />\n                <div className=\"container-icons-edit\">\n                  <img\n                    onClick={() => {\n                      openModal();\n                      editCard(card);\n                    }}\n                    className=\"pencil-icon\"\n                    src={pencil}\n                    alt=\"\"\n                  />\n                  <img\n                    onClick={() => {\n                      openModal();\n                      getCurrentData(card.cardTitle, card.id);\n                    }}\n                    className=\"del-icon\"\n                    src={delIcon}\n                  />\n                </div>\n              </div>\n            );\n          })\n        )}\n      </div>\n      {editOrDelete === \"put\" && (\n        <FormCard\n          modalIsOpen={modalIsOpen}\n          openModal={openModal}\n          cardData={cardToEdit}\n          fetchApi={fetchAPi}\n        />\n      )}\n      {editOrDelete === \"del\" && (\n        <Modal\n          className=\"modal-delete-card\"\n          ariaHideApp={false}\n          style={customStyles}\n          isOpen={modalIsOpen}\n        >\n          <div style={{ textAlign: \"center\" }}>\n            <div className=\"container-alert-text\">\n              <h2>\n                ¡Se eliminara la carta:\n                <span\n                  style={{\n                    backgroundColor: \"white\",\n                    color: \"#087FFF\",\n                    borderRadius: \"5px\",\n                  }}\n                >\n                  {actualCardTitle}\n                </span>\n                !\n              </h2>\n            </div>\n            <button onClick={deleteCardF} className=\"btn-delete-card\">\n              <h3>ok</h3>\n            </button>\n            <button className=\"btn-cancel-delete\" onClick={openModal}>\n              <h3>Cancelar</h3>\n            </button>\n          </div>\n        </Modal>\n      )}\n      <MenuBar></MenuBar>\n    </div>\n  );\n};\n\nexport default DeleteCards;\n","/home/yair/Desktop/Programming/what i delete form project/src/context/AuthContext.js",["172","173","174"],[],"import jwt_decode from \"jwt-decode\";\nimport { createContext, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport mySite from \"../components/Domain\";\nconst AuthContext = createContext();\n\nexport default AuthContext;\n\nexport const AuthProvider = ({ children }) => {\n  let [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  let [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  );\n  console.log(user);\n  const [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  let loginUser = async (e) => {\n    console.log(e.target);\n    e.preventDefault();\n    let response = await fetch(`${mySite}token/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value,\n      }),\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      console.log(\"success\");\n      console.log(data);\n      setAuthTokens(data);\n\n      setUser(jwt_decode(data.access));\n      console.log(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n    } else {\n      alert(\"Ups, algo salió mal intentalo de nuevo\");\n    }\n  };\n  // let loginAfterSignUp =()=>{\n\n  let loginAfterSignUp = async (dataSignUp) => {\n    let response = await fetch(`/api/token/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: dataSignUp.username,\n        password: dataSignUp.password,\n      }),\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      console.log(\"success\");\n      console.log(data);\n      setAuthTokens(data);\n\n      setUser(jwt_decode(data.access));\n      console.log(jwt_decode(data.access));\n      localStorage.setItem(\"authTokens\", JSON.stringify(data));\n      navigate(\"/\");\n    } else {\n      alert(\"something went wrong\");\n    }\n  };\n  // }\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem(\"authTokens\");\n    navigate(\"/login\");\n  };\n\n  // let updateToken = async () => {\n  //   console.log(\"update token called\");\n  //   let response = await fetch(`${mySite}token/refresh/`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify({\n  //       refresh: authTokens?.refresh,\n  //     }),\n  //   });\n  //   let data = await response.json();\n\n  //   if (response.satus === 200) {\n  //     setAuthTokens(data);\n  //     setUser(jwt_decode(data.access));\n  //     localStorage.setItem(\"authTokens\", JSON.stringify(data));\n  //   } else {\n  //     console.log(\"err\");\n  //     //logoutUser();\n  //   }\n  //   if (loading) {\n  //     setLoading(false);\n  //   }\n  // };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n    loginAfterSignUp,\n  };\n\n  // useEffect(() => {\n  //   if (loading) {\n  //     updateToken();\n  //   }\n  //   let fourMinutes = 1000 * 60 * 4;\n  //   let interval = setInterval(() => {\n  //     if (authTokens) {\n  //       updateToken();\n  //     }\n  //   }, fourMinutes);\n  //   return () => clearInterval(interval);\n  // }, [authTokens, loading]);\n\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  );\n};\n","/home/yair/Desktop/Programming/what i delete form project/src/components/Loader.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/Domain.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/Heart.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/MenuBar.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/LeaderBoard.js",["175"],[],"import \"./styles/leaderboard.css\";\nimport first from \"../media/first.png\";\nimport second from \"../media/second.png\";\nimport third from \"../media/third.png\";\nimport usuario from \"../media/user.png\";\nimport { useState } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport { useEffect } from \"react\";\nimport Loader from \"./Loader\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport \"./styles/shinytext.css\";\nimport Modal from \"react-modal\";\nimport { isMobile } from \"react-device-detect\";\nimport mySite from \"./Domain\";\n// import crossOut from \"../media/crossout.png\";\n\nconst customStyles = {\n  content: {\n    color: \"white\",\n    width: isMobile ? \"100%\" : \"500px\",\n    height: isMobile ? \"62%\" : \"510px\",\n    border: \"\",\n    outline: \"none\",\n    borderRadius: \"15px\",\n    left: \"50%\",\n    top: \"10%\",\n    transform: \"translate(-50%)\",\n    backgroundColor: \"#00000000\",\n\n    // top: \"10px\",\n    transition: \"2s ease-in-out\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"#18191ab1\" },\n};\nconst LeaderBoard = ({ isBoard, hideLeaderboard }) => {\n  let { user } = useContext(AuthContext);\n  const [userData, setUserData] = useState();\n  const [tops, setTops] = useState([]);\n  const getTop = () => {\n    helpHttp()\n      .get(`${mySite}topusers/`)\n      .then((res) => {\n        setTops(res.topuser);\n        console.log(res);\n      });\n    helpHttp()\n      .get(`${mySite}users/${user.user_id}`)\n      .then((res) => {\n        setUserData(res.user);\n        console.log(res);\n        console.log(res.user.score);\n      });\n  };\n\n  useEffect(() => {\n    getTop();\n  }, []);\n\n  return (\n    <>\n      <Modal ariaHideApp={false} style={customStyles} isOpen={isBoard}>\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            hideLeaderboard();\n          }}\n        >\n          {/* <img\n            onClick={() => {\n              hideLeaderboard();\n              console.log(\"clickado\");\n            }}\n            src={crossOut}\n            alt=\"\"\n            className=\"tache-leader\"\n          /> */}\n          <div\n            className={\n              isBoard\n                ? \"container-leader-board\"\n                : \"container-leader-board hide-leaderboard \"\n            }\n          >\n            <fieldset\n              className={\n                isMobile ? \"fieldset-leader leader-mobile\" : \"fieldset-leader\"\n              }\n            >\n              <legend>\n                <h2 className=\"leader-title\">XP más altos</h2>\n              </legend>\n              <div className=\"container-content-leader\">\n                <div className=\"container-legend-leader\">\n                  <div>Posición</div>\n                  <div>Usuario</div>\n                  <div>XP</div>\n                  {/* <div>{tops[0].username}</div> */}\n                </div>\n                {!tops ? (\n                  <Loader></Loader>\n                ) : (\n                  tops.map((top, key) => {\n                    return (\n                      <div key={key} className=\"container-place-icons\">\n                        <div className=\"container-place-user\">\n                          <div>\n                            <img\n                              className=\"place-icon\"\n                              src={\n                                (key === 0 && first) ||\n                                (key === 1 && second) ||\n                                (key === 2 && third)\n                              }\n                              alt=\"\"\n                            />\n                          </div>\n                          <div className=\"icon-username\">\n                            <div>\n                              <img\n                                className=\"user-icon-leader\"\n                                src={usuario}\n                                alt=\"\"\n                              />\n                              <div\n                                className={\n                                  top.premium === true ? \"shiny-text\" : \"\"\n                                }\n                              >\n                                <div className=\"max-w-[50px]\">\n                                  {top.username}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                          <div>{top.score}</div>\n                        </div>\n                      </div>\n                    );\n                  })\n                )}\n                <div className=\"your-score-board\">\n                  Tu XP: {userData && userData.score}\n                </div>\n              </div>\n            </fieldset>\n          </div>\n        </OutsideClickHandler>\n      </Modal>\n    </>\n  );\n};\n\nexport default LeaderBoard;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/PayPal.js",["176"],[],"import { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { useContext, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport mySite from \"./Domain\";\nconst PayPal = () => {\n  let { user } = useContext(AuthContext);\n\n  //const { product } = props;\n  const [error, setError] = useState(null);\n  const [paidFor, setPaidFor] = useState(false);\n\n  const handleApprove = (orderId) => {\n    setPaidFor(true);\n  };\n\n  if (paidFor) {\n    alert(\"thanks\");\n    window.location.reload();\n  }\n  if (error) {\n    alert(\"error\");\n    window.location.reload();\n  }\n\n  const test = {\n    describe: \"testing\",\n    price: 0.05,\n  };\n  return (\n    <div className=\"paypal-btn\">\n      <PayPalButtons\n        onClick={(data, actions) => {\n          const hasAlreadyCourse = false;\n          if (hasAlreadyCourse) {\n            setError(\"ya compraste\");\n            return actions.reject();\n          } else {\n            return actions.resolve();\n          }\n        }}\n        createOrder={(data, actions) => {\n          return actions.order.create({\n            purchase_units: [\n              {\n                description: test.describe,\n                amount: {\n                  value: test.price,\n                },\n              },\n            ],\n          });\n        }}\n        onApprove={async (data, action) => {\n          const order = await action.order.capture();\n          console.log(\"order\", order);\n          handleApprove(data.orderID);\n\n          helpHttp()\n            .put(`${mySite}makepremium/${user.user_id}`)\n            .then((res) => {\n              console.log(res);\n              if (!res.err) {\n                console.log(\"no error\");\n                //   setLoading(false);\n              } else {\n                console.log(res);\n                // setError(res);\n              }\n            });\n          //return action.order.capture();\n        }}\n        onCancel={() => {\n          // button.updateProps();\n        }}\n        onError={(err) => {\n          setError(err);\n          console.log(\"paypal error\");\n        }}\n        style={{\n          layout: \"horizontal\",\n          color: \"gold\",\n          shape: \"rect\",\n          height: 30,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PayPal;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/FormCard.js",["177","178","179","180","181","182","183"],[],"import { useState } from \"react\";\nimport \"./styles/formCard.css\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport { useContext } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport ReactFileReader from \"react-file-reader\";\nimport Modal from \"react-modal\";\nimport crossOut from \"../media/crossout.png\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { useEffect } from \"react\";\nimport mySite from \"./Domain\";\nimport Loader from \"./Loader\";\n\nconst url = `${mySite}cards/`;\n\nconst customStyles = {\n  content: {\n    // color: \"white\",\n    width: \"350px\",\n    height: \"350px\",\n    backgroundColor: \"#00000000\",\n    outline: \"none\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"#18191ab1\" },\n};\nconst FormCard = ({ modalIsOpen, openModal, fetchApi, cardData }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(false);\n  const [showBtn, setShowBtn] = useState(true);\n  const [optionSelected, setOptionSelected] = useState(\"\");\n  const [fileSelected, setFileSelected] = useState(false);\n  const [checkUrl, setCheckUrl] = useState(false);\n  const [checkFile, setCheckFile] = useState(false);\n  // const [modalIsOpen, setModalIsOpen] = useState(true);\n  let { user } = useContext(AuthContext);\n\n  let initialForm;\n  if (cardData) {\n    initialForm = {\n      user: user.user_id,\n      title: cardData.cardTitle,\n      meaning: cardData.cardMeaning,\n\n      file: cardData.cardImage,\n      img_url: cardData.imageURL,\n    };\n  } else {\n    initialForm = {\n      user: user.user_id,\n      title: \"\",\n      meaning: \"\",\n      file: \"\",\n      img_url: \"\",\n    };\n  }\n  const [form, setForm] = useState(initialForm);\n\n  useEffect(() => {\n    if (cardData) {\n      if (cardData.imageURL.length > 0) {\n        setOptionSelected(\"url\");\n        setCheckUrl(true);\n      }\n      if (cardData.cardImage.length > 0) {\n        setOptionSelected(\"file\");\n        setFileSelected(true);\n        setCheckFile(true);\n      }\n      setForm({\n        user: user.user_id,\n        title: cardData.cardTitle,\n        meaning: cardData.cardMeaning,\n        file: cardData.cardImage,\n        img_url: cardData.imageURL,\n      });\n    }\n    // console.log(cardData.imageURL);\n    console.log(form);\n  }, [cardData]);\n\n  const createData = (data) => {\n    console.log(form);\n    // if (!form.title === \"\" || !form.meaning === \"\" || !form.file === \"\") {\n    if (\n      form.title === \"\" ||\n      form.meaning === \"\" ||\n      (form.file === \"\" && form.img_url === \"\")\n    ) {\n      alert(\"llena todos los campos por favor\");\n    } else if (form.title.length > 23 || form.meaning.length > 23) {\n      alert(\"demasiado larga UwU\");\n    } else {\n      let options = {\n        body: data,\n        headers: { \"content-type\": \"multipart/form-data\" },\n      };\n      console.log(options);\n\n      if (cardData) {\n        let urlEditCard = `${mySite}card-edit/${cardData.id}`;\n\n        setIsLoading(true);\n        helpHttp()\n          .put(urlEditCard, options)\n          .then((res) => {\n            res.err ? setMessage(true) : setMessage(false);\n            fetchApi();\n          });\n        setIsLoading(false);\n      } else {\n        setIsLoading(true);\n        setShowBtn(false);\n        helpHttp()\n          .post(url, options)\n          .then((res) => {\n            res.err ? setMessage(true) : setMessage(false);\n            fetchApi();\n          });\n        setIsLoading(false);\n\n        setForm(initialForm);\n        setOptionSelected(\"\");\n      }\n      !message && openModal();\n      setShowBtn(true);\n    }\n    // } else {\n    //   alert(\"llena\");\n    // }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(e.taget);\n    console.log(form);\n\n    createData(form);\n  };\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const hideFormCard = () => {\n    openModal();\n    setMessage(false);\n    setOptionSelected(\"\");\n    setFileSelected(false);\n    setCheckUrl(false);\n    setCheckFile(false);\n  };\n  const handleFiles = (file) => {\n    file && setFileSelected(true);\n    setForm({\n      ...form,\n      [\"file\"]: file.base64,\n    });\n  };\n\n  const handleChangeRadio = (e) => {\n    setOptionSelected(e.target.value);\n    if (e.target.value === \"url\") {\n      setFileSelected(false);\n    }\n    // console.log(optionSelected);\n    console.log(fileSelected);\n  };\n\n  useEffect(() => {\n    if (optionSelected === \"url\") {\n      setForm({\n        ...form,\n        [\"file\"]: \"\",\n      });\n      // setFileSelected(false);\n      console.log(form);\n    }\n    if (optionSelected === \"file\") {\n      setForm({\n        ...form,\n        [\"img_url\"]: \"\",\n      });\n      // setFileSelected(true);\n    }\n  }, [optionSelected]);\n\n  return (\n    <Modal\n      className=\"modal-form-card\"\n      ariaHideApp={false}\n      style={customStyles}\n      isOpen={modalIsOpen}\n      // contentLabel=\"Minimal Modal Example\"\n    >\n      <OutsideClickHandler\n        onOutsideClick={() => {\n          hideFormCard();\n        }}\n      >\n        <img\n          style={{ margin: \"10px\" }}\n          className=\"cross-out\"\n          onClick={openModal}\n          src={crossOut}\n          alt=\"\"\n        />\n        <div className=\"container-form-card\">\n          <div className=\"form-card\">\n            <div>\n              <h3>{cardData ? \"Edita tu carta\" : \"¡Sube tus cartas!\"}</h3>\n            </div>\n            <div>\n              <input\n                name=\"title\"\n                value={form.title}\n                onChange={handleChange}\n                className=\"input-form-card\"\n                type=\"text\"\n                placeholder=\"Palabra en ingles\"\n              />\n            </div>\n            <div>\n              <input\n                name=\"meaning\"\n                value={form.meaning}\n                onChange={handleChange}\n                className=\"input-form-card\"\n                type=\"text\"\n                placeholder=\"signicado\"\n              />\n            </div>\n            <h2></h2>\n            <br />\n            <div>\n              Enviar imagen en:\n              <br />\n              <label htmlFor=\"file\">Archivo </label>\n              <input\n                onChange={handleChangeRadio}\n                id=\"file\"\n                name=\"btn-radio\"\n                type=\"radio\"\n                value=\"file\"\n                checked={checkFile}\n                onClick={() => {\n                  setCheckUrl(false);\n                  setCheckFile(true);\n                }}\n\n                // checked\n                // checked={cardData.cardImage.length > 0 && true}\n              />\n              <br />\n              <label htmlFor=\"url\">Url</label>\n              <input\n                checked={checkUrl}\n                onChange={handleChangeRadio}\n                id=\"url\"\n                name=\"btn-radio\"\n                type=\"radio\"\n                value=\"url\"\n                onClick={() => {\n                  setCheckFile(false);\n                  setCheckUrl(true);\n                }}\n\n                // checked={cardData.imageURL.length > 0 && true}\n              />\n            </div>\n            <div></div>\n            {optionSelected === \"file\" ? (\n              <div className=\"main_div\">\n                <ReactFileReader handleFiles={handleFiles} base64={true}>\n                  <button>\n                    {fileSelected\n                      ? \"Archivo seleccionado ✅\"\n                      : \"Selecciona imagen\"}\n                  </button>\n                </ReactFileReader>\n              </div>\n            ) : (\n              optionSelected === \"url\" && (\n                <div>\n                  <input\n                    name=\"img_url\"\n                    value={form.img_url}\n                    onChange={handleChange}\n                    className=\"input-form-card\"\n                    type=\"text\"\n                    placeholder=\"Dirección de la imagen\"\n                  />\n                  <span\n                    onClick={() => {\n                      setForm({ ...form, [\"img_url\"]: \"\" });\n                    }}\n                    className=\"btn btn-sm rounded-full absolute ml-2 mt-2\"\n                  >\n                    ×\n                  </span>\n                </div>\n              )\n            )}\n            <div>\n              <button\n                onClick={handleSubmit}\n                type=\"submit\"\n                className={showBtn ? \"btn-send-card\" : \"hide-btn-send-card\"}\n              >\n                Enviar\n              </button>\n            </div>\n            {isLoading && <Loader />}\n          </div>\n        </div>\n        {message && (\n          <div style={{ textAlign: \"center\", color: \"red\" }}>\n            ups Algo salio mal, intentalo de nuevo\n          </div>\n        )}\n      </OutsideClickHandler>\n    </Modal>\n  );\n};\n\nexport default FormCard;\n","/home/yair/Desktop/Programming/what i delete form project/src/helpers/helpHttp.js",[],[],"/home/yair/Desktop/Programming/what i delete form project/src/components/AboutUser.js",["184","185"],[],"import \"./styles/modalStyles.css\";\nimport usuario from \"../media/user.png\";\nimport Modal from \"react-modal\";\nimport { useContext, useEffect, useState } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport PayPal from \"./PayPal\";\nimport closeUser from \"../media/logout.png\";\nimport vip from \"../media/vip.png\";\nimport crossOut from \"../media/crossout.png\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport \"./styles/shinytext.css\";\nimport mySite from \"./Domain\";\n// Modal.defaultStyles.overlay.backgroundColor = \"rgba(0, 0, 0, 0.83)\";\nconst customStyles = {\n  content: {\n    color: \"white\",\n    width: \"270px\",\n    height: \"450px\",\n    backgroundColor: \"black\",\n    border: \"solid 1px #040615\",\n    outline: \"none\",\n    borderRadius: \"15px\",\n    left: \"99.9%\",\n    // top: \"40%\",\n\n    transform: \"translate(-100%,-8%)\",\n    // top: \"10px\",\n    transition: \"2s ease-in-out\",\n  },\n  overlay: { zIndex: 999, backgroundColor: \"rgba(0, 0, 0, 0)\" },\n};\n\nconst AboutUser = ({ wasUp }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let { user, logoutUser } = useContext(AuthContext);\n  const [scoreUser, setScoreUser] = useState();\n  const [isPremium, setIsPremium] = useState(false);\n  let url = `${mySite}users/${user.user_id}`;\n  const hideAboutUser = () => {\n    setModalIsOpen(false);\n  };\n  // const ref = useDetectClickOutside({ onTriggered: hideAboutUser });\n\n  const getuser = () => {\n    console.log(\"loli\");\n    helpHttp()\n      .get(url)\n      .then((res) => {\n        setIsPremium(res.user.premium);\n        // console.log(isPremium);\n        setScoreUser(res.user.score);\n      });\n  };\n\n  useEffect(() => {\n    getuser();\n  }, []);\n  useEffect(() => {\n    wasUp && getuser();\n  }, [wasUp]);\n\n  const openModal = (e) => {\n    // e.preventDefault();\n    modalIsOpen ? setModalIsOpen(false) : setModalIsOpen(true);\n  };\n\n  return (\n    <>\n      <img\n        style={{\n          filter: modalIsOpen ? \"brightness(100%)\" : \"brightness(45%)\",\n        }}\n        className=\"icon-menu-bar\"\n        onClick={openModal}\n        src={usuario}\n        alt=\"\"\n      />\n      <Modal\n        ariaHideApp={false}\n        style={customStyles}\n        isOpen={modalIsOpen}\n        contentLabel=\"Minimal Modal Example\"\n      >\n        <OutsideClickHandler\n          onOutsideClick={() => {\n            hideAboutUser();\n          }}\n        >\n          <img\n            className=\"cross-out\"\n            onClick={openModal}\n            src={crossOut}\n            alt=\"\"\n          />\n\n          <div className=\"container-info-inside-modal\">\n            <div>\n              <h2 className=\"textito\">\n                ¡Bienvenido{\" \"}\n                <span className={isPremium ? \"shiny-text\" : \"\"}>\n                  {/* {console.log(isPremium)} */}\n                  {user.username}\n                </span>\n                !\n              </h2>\n              <h4 style={{ textAlign: \"center\", marginTop: \"10px\" }}>\n                {scoreUser} XP\n              </h4>\n            </div>\n\n            <div className=\"user-is-vip\">\n              <img className=\"vip-icon\" src={vip} alt=\"\" />\n              <span>\n                <strong>\n                  {isPremium\n                    ? \"Eres usuario premium 😃!\"\n                    : \"Todavia no eres usuario premium ☹️ (puedes serlo pagando aqui⬇)\"}\n                  {!isPremium && <PayPal></PayPal>}\n                </strong>\n              </span>\n            </div>\n            {/* <button class=\"button-pro\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 36 24\">\n                <path d=\"m18 0 8 12 10-8-4 20H4L0 4l10 8 8-12z\"></path>\n              </svg>\n              Unlock Pro\n            </button> */}\n\n            <div className=\"icon-text-modal-logout\" onClick={logoutUser}>\n              <img className=\"logout-icon\" src={closeUser} alt=\"\" />\n              <span className=\"logout-text\">Cerrar sesión</span>\n            </div>\n          </div>\n        </OutsideClickHandler>\n      </Modal>\n    </>\n  );\n};\n\nexport default AboutUser;\n","/home/yair/Desktop/Programming/what i delete form project/src/components/NewLeaderBoard.js",["186","187"],[],"import React, { useEffect, useState } from \"react\";\n// import AuthContext from \"../context/AuthContext\";\nimport { helpHttp } from \"../helpers/helpHttp\";\nimport first from \"../media/first.png\";\nimport second from \"../media/second.png\";\nimport third from \"../media/third.png\";\nimport mySite from \"./Domain\";\n\nconst NewLeaderBoard = () => {\n  //   let { user } = useContext(AuthContext);\n  const [userData, setUserData] = useState();\n  const [tops, setTops] = useState([]);\n  const getTop = () => {\n    helpHttp()\n      .get(`${mySite}topusers/`)\n      .then((res) => {\n        setTops(res.topuser);\n      });\n    // helpHttp()\n    //   .get(`${mySite}users/${user.user_id}`)\n    //   .then((res) => {\n    //     setUserData(res.user);\n    //     console.log(res);\n    //     console.log(res.user.score);\n    //   });\n  };\n  useEffect(() => {\n    getTop();\n  }, []);\n\n  return (\n    <div className=\"text-black sm:w-3/4 mx-auto\">\n      <table class=\"w-full text-left bg-white shadow-lg rounded-lg\">\n        <thead>\n          <tr class=\"bg-gray-800 text-white\">\n            <th class=\"px-4 py-2 text-sm font-bold uppercase tracking-wide\">\n              Rank\n            </th>\n            <th class=\"px-4 py-2 text-sm font-bold uppercase tracking-wide\">\n              Nombre\n            </th>\n            <th class=\"px-4 py-2 text-sm font-bold uppercase tracking-wide\">\n              XP\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr class=\"bg-gray-100\">\n            <td class=\"border px-4 py-2 text-xl\">\n              <img src={first} className=\"w-10\" alt=\"\" />\n            </td>\n\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[0] && tops[0].username}\n            </td>\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[0] && tops[0].score}\n            </td>\n          </tr>\n          <tr class=\"bg-gray-200\">\n            <td class=\"border px-4 py-2 text-xl \">\n              <img src={second} className=\"w-10\" alt=\"\" />\n            </td>\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[1] && tops[1].username}\n            </td>\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[1] && tops[1].score}\n            </td>\n          </tr>\n          <tr class=\"bg-gray-100\">\n            <td class=\"border px-4 py-2 text-xl \">\n              <img src={third} className=\"w-10\" alt=\"\" />\n            </td>\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[2] && tops[2].username}\n            </td>\n            <td class=\"border px-4 py-2 text-xl font-bold\">\n              {tops[2] && tops[2].score}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default NewLeaderBoard;\n",{"ruleId":"188","severity":1,"message":"189","line":21,"column":9,"nodeType":"190","messageId":"191","endLine":21,"endColumn":13},{"ruleId":"192","severity":1,"message":"193","line":34,"column":6,"nodeType":"194","endLine":34,"endColumn":8,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":45,"column":15,"nodeType":"198","endLine":45,"endColumn":73},{"ruleId":"188","severity":1,"message":"199","line":8,"column":8,"nodeType":"190","messageId":"191","endLine":8,"endColumn":16},{"ruleId":"188","severity":1,"message":"200","line":29,"column":9,"nodeType":"190","messageId":"191","endLine":29,"endColumn":20},{"ruleId":"188","severity":1,"message":"201","line":16,"column":20,"nodeType":"190","messageId":"191","endLine":16,"endColumn":30},{"ruleId":"188","severity":1,"message":"202","line":16,"column":32,"nodeType":"190","messageId":"191","endLine":16,"endColumn":48},{"ruleId":"203","severity":1,"message":"204","line":57,"column":33,"nodeType":"205","messageId":"206","endLine":57,"endColumn":49},{"ruleId":"188","severity":1,"message":"207","line":20,"column":10,"nodeType":"190","messageId":"191","endLine":20,"endColumn":15},{"ruleId":"188","severity":1,"message":"208","line":20,"column":17,"nodeType":"190","messageId":"191","endLine":20,"endColumn":25},{"ruleId":"188","severity":1,"message":"209","line":7,"column":10,"nodeType":"190","messageId":"191","endLine":7,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":59,"column":33,"nodeType":"205","messageId":"206","endLine":59,"endColumn":49},{"ruleId":"192","severity":1,"message":"210","line":104,"column":6,"nodeType":"194","endLine":104,"endColumn":8,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":360,"column":52,"nodeType":"214","messageId":"215","endLine":360,"endColumn":54},{"ruleId":"188","severity":1,"message":"216","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":20},{"ruleId":"188","severity":1,"message":"217","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":19},{"ruleId":"188","severity":1,"message":"218","line":13,"column":17,"nodeType":"190","messageId":"191","endLine":13,"endColumn":25},{"ruleId":"188","severity":1,"message":"219","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":16},{"ruleId":"188","severity":1,"message":"220","line":14,"column":18,"nodeType":"190","messageId":"191","endLine":14,"endColumn":27},{"ruleId":"212","severity":1,"message":"221","line":57,"column":16,"nodeType":"214","messageId":"215","endLine":57,"endColumn":18},{"ruleId":"192","severity":1,"message":"222","line":76,"column":6,"nodeType":"194","endLine":76,"endColumn":8,"suggestions":"223"},{"ruleId":"192","severity":1,"message":"193","line":74,"column":6,"nodeType":"194","endLine":74,"endColumn":8,"suggestions":"224"},{"ruleId":"196","severity":1,"message":"197","line":109,"column":19,"nodeType":"198","endLine":116,"endColumn":21},{"ruleId":"188","severity":1,"message":"225","line":2,"column":25,"nodeType":"190","messageId":"191","endLine":2,"endColumn":34},{"ruleId":"188","severity":1,"message":"226","line":21,"column":10,"nodeType":"190","messageId":"191","endLine":21,"endColumn":17},{"ruleId":"188","severity":1,"message":"227","line":21,"column":19,"nodeType":"190","messageId":"191","endLine":21,"endColumn":29},{"ruleId":"192","severity":1,"message":"228","line":59,"column":6,"nodeType":"194","endLine":59,"endColumn":8,"suggestions":"229"},{"ruleId":"188","severity":1,"message":"230","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":30},{"ruleId":"192","severity":1,"message":"231","line":79,"column":6,"nodeType":"194","endLine":79,"endColumn":16,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":158,"column":7,"nodeType":"235","messageId":"236","endLine":158,"endColumn":28,"fix":"237"},{"ruleId":"233","severity":1,"message":"234","line":175,"column":9,"nodeType":"235","messageId":"236","endLine":175,"endColumn":21,"fix":"238"},{"ruleId":"233","severity":1,"message":"239","line":183,"column":9,"nodeType":"235","messageId":"236","endLine":183,"endColumn":24,"fix":"240"},{"ruleId":"192","severity":1,"message":"241","line":187,"column":6,"nodeType":"194","endLine":187,"endColumn":22,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":234,"column":13,"nodeType":"198","endLine":234,"endColumn":17},{"ruleId":"233","severity":1,"message":"239","line":296,"column":42,"nodeType":"235","messageId":"236","endLine":296,"endColumn":57,"fix":"245"},{"ruleId":"192","severity":1,"message":"246","line":58,"column":6,"nodeType":"194","endLine":58,"endColumn":8,"suggestions":"247"},{"ruleId":"192","severity":1,"message":"246","line":61,"column":6,"nodeType":"194","endLine":61,"endColumn":13,"suggestions":"248"},{"ruleId":"188","severity":1,"message":"249","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":18},{"ruleId":"188","severity":1,"message":"250","line":11,"column":20,"nodeType":"190","messageId":"191","endLine":11,"endColumn":31},"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAPi'. Either include it or remove the dependency array.","ArrayExpression",["251"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'NewLogin' is defined but never used.","'handleReset' is assigned a value but never used.","'logoutUser' is assigned a value but never used.","'loginAfterSignUp' is assigned a value but never used.","no-self-assign","'form[\"password\"]' is assigned to itself.","MemberExpression","selfAssignment","'likes' is assigned a value but never used.","'setLikes' is assigned a value but never used.","'isMobile' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchAPi' and 'getUserData'. Either include them or remove the dependency array.",["252"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'setCards' is assigned a value but never used.","'phrase' is assigned a value but never used.","'setPhrase' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'generateWord'. Either include it or remove the dependency array.",["253"],["254"],"'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getTop'. Either include it or remove the dependency array.",["255"],"'PayPalScriptProvider' is defined but never used.","React Hook useEffect has missing dependencies: 'form' and 'user.user_id'. Either include them or remove the dependency array.",["256"],"no-useless-computed-key","Unnecessarily computed property [\"file\"] found.","Property","unnecessarilyComputedProperty",{"range":"257","text":"258"},{"range":"259","text":"258"},"Unnecessarily computed property [\"img_url\"] found.",{"range":"260","text":"261"},"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array. You can also do a functional update 'setForm(f => ...)' if you only need 'form' in the 'setForm' call.",["262"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.",{"range":"263","text":"261"},"React Hook useEffect has a missing dependency: 'getuser'. Either include it or remove the dependency array.",["264"],["265"],"'userData' is assigned a value but never used.","'setUserData' is assigned a value but never used.",{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"270","fix":"271"},{"desc":"266","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},[4165,4173],"\"file\"",[4520,4528],[4686,4697],"\"img_url\"",{"desc":"277","fix":"278"},[8072,8083],{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},"Update the dependencies array to be: [fetchAPi]",{"range":"283","text":"284"},"Update the dependencies array to be: [fetchAPi, getUserData]",{"range":"285","text":"286"},"Update the dependencies array to be: [generateWord]",{"range":"287","text":"288"},{"range":"289","text":"284"},"Update the dependencies array to be: [getTop]",{"range":"290","text":"291"},"Update the dependencies array to be: [cardData, form, user.user_id]",{"range":"292","text":"293"},"Update the dependencies array to be: [form, optionSelected]",{"range":"294","text":"295"},"Update the dependencies array to be: [getuser]",{"range":"296","text":"297"},"Update the dependencies array to be: [getuser, wasUp]",{"range":"298","text":"299"},[933,935],"[fetchAPi]",[3387,3389],"[fetchAPi, getUserData]",[2236,2238],"[generateWord]",[2109,2111],[1689,1691],"[getTop]",[2271,2281],"[cardData, form, user.user_id]",[4756,4772],"[form, optionSelected]",[1738,1740],"[getuser]",[1792,1799],"[getuser, wasUp]"]